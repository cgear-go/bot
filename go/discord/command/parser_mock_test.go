// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jonathanarnault/cgear-go/go/discord/command (interfaces: Parser)

// Package command is a generated GoMock package.
package command

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockParser is a mock of Parser interface.
type MockParser struct {
	ctrl     *gomock.Controller
	recorder *MockParserMockRecorder
}

// MockParserMockRecorder is the mock recorder for MockParser.
type MockParserMockRecorder struct {
	mock *MockParser
}

// NewMockParser creates a new mock instance.
func NewMockParser(ctrl *gomock.Controller) *MockParser {
	mock := &MockParser{ctrl: ctrl}
	mock.recorder = &MockParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockParser) EXPECT() *MockParserMockRecorder {
	return m.recorder
}

// ReadInt mocks base method.
func (m *MockParser) ReadInt() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadInt")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadInt indicates an expected call of ReadInt.
func (mr *MockParserMockRecorder) ReadInt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadInt", reflect.TypeOf((*MockParser)(nil).ReadInt))
}

// ReadRest mocks base method.
func (m *MockParser) ReadRest() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadRest")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadRest indicates an expected call of ReadRest.
func (mr *MockParserMockRecorder) ReadRest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadRest", reflect.TypeOf((*MockParser)(nil).ReadRest))
}

// ReadString mocks base method.
func (m *MockParser) ReadString() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadString")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadString indicates an expected call of ReadString.
func (mr *MockParserMockRecorder) ReadString() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadString", reflect.TypeOf((*MockParser)(nil).ReadString))
}
