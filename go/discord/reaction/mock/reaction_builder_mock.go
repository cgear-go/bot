// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jonathanarnault/cgear-go/go/discord/reaction (interfaces: ReactionBuilder)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	reaction "github.com/jonathanarnault/cgear-go/go/discord/reaction"
	session "github.com/jonathanarnault/cgear-go/go/discord/session"
)

// MockReactionBuilder is a mock of ReactionBuilder interface.
type MockReactionBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockReactionBuilderMockRecorder
}

// MockReactionBuilderMockRecorder is the mock recorder for MockReactionBuilder.
type MockReactionBuilderMockRecorder struct {
	mock *MockReactionBuilder
}

// NewMockReactionBuilder creates a new mock instance.
func NewMockReactionBuilder(ctrl *gomock.Controller) *MockReactionBuilder {
	mock := &MockReactionBuilder{ctrl: ctrl}
	mock.recorder = &MockReactionBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReactionBuilder) EXPECT() *MockReactionBuilderMockRecorder {
	return m.recorder
}

// AddChannelFilter mocks base method.
func (m *MockReactionBuilder) AddChannelFilter(arg0 session.ChannelFilter) reaction.ReactionBuilder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddChannelFilter", arg0)
	ret0, _ := ret[0].(reaction.ReactionBuilder)
	return ret0
}

// AddChannelFilter indicates an expected call of AddChannelFilter.
func (mr *MockReactionBuilderMockRecorder) AddChannelFilter(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddChannelFilter", reflect.TypeOf((*MockReactionBuilder)(nil).AddChannelFilter), arg0)
}

// OnReactionAdded mocks base method.
func (m *MockReactionBuilder) OnReactionAdded(arg0 reaction.ReactionFn) reaction.ReactionBuilder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OnReactionAdded", arg0)
	ret0, _ := ret[0].(reaction.ReactionBuilder)
	return ret0
}

// OnReactionAdded indicates an expected call of OnReactionAdded.
func (mr *MockReactionBuilderMockRecorder) OnReactionAdded(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnReactionAdded", reflect.TypeOf((*MockReactionBuilder)(nil).OnReactionAdded), arg0)
}

// OnReactionRemoved mocks base method.
func (m *MockReactionBuilder) OnReactionRemoved(arg0 reaction.ReactionFn) reaction.ReactionBuilder {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OnReactionRemoved", arg0)
	ret0, _ := ret[0].(reaction.ReactionBuilder)
	return ret0
}

// OnReactionRemoved indicates an expected call of OnReactionRemoved.
func (mr *MockReactionBuilderMockRecorder) OnReactionRemoved(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnReactionRemoved", reflect.TypeOf((*MockReactionBuilder)(nil).OnReactionRemoved), arg0)
}
